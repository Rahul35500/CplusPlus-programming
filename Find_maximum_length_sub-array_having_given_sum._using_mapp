#include <iostream>
#include <unordered_map>
using namespace std;
void maximum_length_sub_array(int arr[], int n, int sum);
int main()
{
    int arr[] = {5, 6, -5, 5, 3, 5, 3, -2, 0};
    int n = sizeof(arr) / sizeof(arr[0]);
    int sum = 8;
    maximum_length_sub_array(arr, n, sum);
}
void maximum_length_sub_array(int arr[], int n, int sum)
{
    std::unordered_map<int, int> maps;
    int TotalSum = 0;
    int index = -1;
    int length = 0;
    for (int i = 0; i < n; i++)
    {
        TotalSum += arr[i];
        if (maps.find(TotalSum) == maps.end())
        {
            maps[TotalSum] = i;
        }
        if (maps.find(TotalSum - sum) != maps.end() && length < i - maps[TotalSum - sum])
        {
            length = i - maps[TotalSum - sum];
            index = i;
        }
    }
    //pehle minus hota tha plus by rules//
    cout << "start index value [" << index - length + 1 << "," << index << "]"<<endl;
    cout<<"maximum length of the subarray : "<<length<<endl;
    cout<<"maximum lengthy subArray are {";
    for(int i=index-length+1;i<=index;i++)
    {
        cout<<arr[i]<<" ";
    }
        cout<<"}";

}